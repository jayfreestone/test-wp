version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.1-node-browsers
    steps:
      - checkout
      - run: cd app && composer install -n --ignore-platform-reqs

  deploy:
    docker:
        - image: circleci/php:7.1-node-browsers #docker:17.11.0-ce-git
    steps:
      - checkout
      - run: cd app && composer install -n --ignore-platform-reqs
      - run:
          name: Create .env
          command: |
            cd app
            cat > .env << EOF
            DB_NAME=${DB_NAME}
            DB_USER=${DB_USER}
            DB_PASSWORD=${DB_PASSWORD}

            # Optional variables
            DB_HOST=${DB_HOST}
            DB_PREFIX=test_

            WP_ENV=production
            WP_HOME=http://testwp.com
            WP_SITEURL=${WP_HOME}/wp
            EOF

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install AWS CLI
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws

      - run:
          name: "Log in to AWS ECR"
          command: yes | eval $(aws ecr get-login --region=eu-west-1 --no-include-email) 2> /dev/null || true # weird exit code, so adding OR true

      - run:
          name: Build application Docker image
          command: |
            docker build -t testwp:$CIRCLE_SHA1 .

      - run:
          name: Push to ECR
          command: |
            docker tag testwp:$CIRCLE_SHA1 $ECR_LOCATION/test-wp:latest
            docker push $ECR_LOCATION/test-wp:latest

      - deploy:
          name: Configure task definition
          command: |
            aws configure set region eu-west-1

            # Create task for docker deploy
            task_def=$(cat <<EOF
            [
              {
                "name": "test-wp",
                "image": "${ECR_LOCATION}/test-wp:latest",
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 80,
                    "hostPort": 80
                  }
                ]
              }
            ]
            EOF
            )

            # Register task definition
            json=$(aws ecs register-task-definition \
              --execution-role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/ecsTaskExecutionRole \
              --requires-compatibilities "FARGATE" \
              --cpu 256 \
              --task-role-arn "ecsExecutionRole" \
              --execution-role-arn "ecsExecutionRole" \
              --memory 0.5gb \
              --container-definitions "$task_def" \
              --network-mode "awsvpc" \
              --family "test-wp")

            echo $json

            # Grab revision # using regular bash and grep
            revision=$(echo "$json" | grep -o '"revision": [0-9]*' | grep -Eo '[0-9]+')

            # Deploy revision
            aws ecs update-service \
              --cluster "testwp" \
              --service "test-wp-4" \
              --task-definition "test-wp":"$revision"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master

